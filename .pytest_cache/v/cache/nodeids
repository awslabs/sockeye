[
  "test/unit/test_arguments.py::test_io_args[--source test_src --target test_tgt --prepared-data prep_data --validation-source test_validation_src --validation-target test_validation_tgt --output test_output-expected_params0]",
  "test/unit/test_arguments.py::test_io_args[-s test_src -t test_tgt -d prep_data -vs test_validation_src -vt test_validation_tgt -o test_output-expected_params1]",
  "test/unit/test_arguments.py::test_logging_args[-expected_params0]",
  "test/unit/test_arguments.py::test_device_args[-expected_params0]",
  "test/unit/test_arguments.py::test_device_args[--device-ids 1 2 3 --use-cpu --disable-device-locking --lock-dir test_dir-expected_params1]",
  "test/unit/test_arguments.py::test_model_parameters[-expected_params0]",
  "test/unit/test_arguments.py::test_training_arg[-expected_params0]",
  "test/unit/test_arguments.py::test_inference_args[-m model-expected_params0]",
  "test/unit/test_arguments.py::test_tutorial_train_args[-s train.source -t train.target -vs dev.source -vt dev.target --num-embed 32 --rnn-num-hidden 64 --rnn-attention-type dot --use-cpu --metrics perplexity accuracy --max-num-checkpoint-not-improved 3 -o seqcopy_model-expected_params0-expected_params_present0]",
  "test/unit/test_arguments.py::test_tutorial_train_args[-s corpus.tc.BPE.de -t corpus.tc.BPE.en -vs newstest2016.tc.BPE.de -vt newstest2016.tc.BPE.en --num-embed 256 --rnn-num-hidden 512 --rnn-attention-type dot --max-seq-len 60 --decode-and-evaluate 500 --use-cpu -o wmt_mode-expected_params1-expected_params_present1]",
  "test/unit/test_arguments.py::test_tutorial_translate_args[-m seqcopy_model --use-cpu-expected_params0-expected_params_present0]",
  "test/unit/test_arguments.py::test_tutorial_translate_args[-m wmt_model wmt_model_seed2 --use-cpu --output-type align_plot-expected_params1-expected_params_present1]",
  "test/unit/test_arguments.py::test_tutorial_averaging_args[-o wmt_model_avg/param.best wmt_model-expected_params0-expected_params_present0]",
  "test/unit/test_arguments.py::test_prepare_data_cli_args[--source test_src --target test_tgt --output prepared_data -expected_params0]",
  "test/unit/test_attention.py::test_att_bilinear",
  "test/unit/test_attention.py::test_att_dot",
  "test/unit/test_attention.py::test_att_dot_scaled",
  "test/unit/test_attention.py::test_att_mh_dot",
  "test/unit/test_attention.py::test_att_fixed",
  "test/unit/test_attention.py::test_att_loc",
  "test/unit/test_attention.py::test_att_mlp",
  "test/unit/test_attention.py::test_att_cov",
  "test/unit/test_attention.py::test_attention[bilinear]",
  "test/unit/test_attention.py::test_attention[dot]",
  "test/unit/test_attention.py::test_attention[location]",
  "test/unit/test_attention.py::test_attention[mlp]",
  "test/unit/test_attention.py::test_coverage_attention[gru-10]",
  "test/unit/test_attention.py::test_coverage_attention[tanh-4]",
  "test/unit/test_attention.py::test_coverage_attention[count-1]",
  "test/unit/test_attention.py::test_coverage_attention[sigmoid-1]",
  "test/unit/test_attention.py::test_coverage_attention[relu-30]",
  "test/unit/test_attention.py::test_last_state_attention",
  "test/unit/test_attention.py::test_get_context_and_attention_probs",
  "test/unit/test_average.py::test_strategy_best[test_points0-expected_top_n0-3-True]",
  "test/unit/test_average.py::test_strategy_best[test_points1-expected_top_n1-3-False]",
  "test/unit/test_average.py::test_strategy_best[test_points2-expected_top_n2-3-True]",
  "test/unit/test_average.py::test_strategy_best[test_points3-expected_top_n3-5-True]",
  "test/unit/test_average.py::test_strategy_last[test_points0-expected_top_n0-3-True]",
  "test/unit/test_average.py::test_strategy_last[test_points1-expected_top_n1-3-False]",
  "test/unit/test_average.py::test_strategy_last[test_points2-expected_top_n2-3-True]",
  "test/unit/test_average.py::test_strategy_last[test_points3-expected_top_n3-3-False]",
  "test/unit/test_average.py::test_strategy_last[test_points4-expected_top_n4-1-False]",
  "test/unit/test_average.py::test_strategy_last[test_points5-expected_top_n5-5-True]",
  "test/unit/test_average.py::test_strategy_lifespan[test_points0-expected_top_n0-3-True]",
  "test/unit/test_average.py::test_strategy_lifespan[test_points1-expected_top_n1-3-True]",
  "test/unit/test_average.py::test_strategy_lifespan[test_points2-expected_top_n2-3-True]",
  "test/unit/test_average.py::test_strategy_lifespan[test_points3-expected_top_n3-3-False]",
  "test/unit/test_average.py::test_strategy_lifespan[test_points4-expected_top_n4-3-True]",
  "test/unit/test_average.py::test_strategy_lifespan[test_points5-expected_top_n5-1-False]",
  "test/unit/test_average.py::test_strategy_lifespan[test_points6-expected_top_n6-5-False]",
  "test/unit/test_bleu.py::test_bleu[hypotheses0-references0-0.003799178428257963]",
  "test/unit/test_bleu.py::test_bleu[hypotheses1-references1-1.0]",
  "test/unit/test_bleu.py::test_bleu[hypotheses2-references2-0.223606797749979]",
  "test/unit/test_bleu.py::test_effective_order[hypotheses0-references0-0.3678794411714425]",
  "test/unit/test_bleu.py::test_effective_order[hypotheses1-references1-1.0]",
  "test/unit/test_bleu.py::test_effective_order[hypotheses2-references2-0.03218297948685433]",
  "test/unit/test_bleu.py::test_statistics[am I am a character sequence-I am a symbol string sequence a a-expected_stat0]",
  "test/unit/test_bleu.py::test_scoring[statistics0-0.8375922397]",
  "test/unit/test_bleu.py::test_offset[am I am a character sequence-I am a symbol string sequence a a-0.1555722182-0]",
  "test/unit/test_bleu.py::test_degenerate_statistics[statistics0-0.0-0.0]",
  "test/unit/test_bleu.py::test_degenerate_statistics[statistics1-0.0-0.0]",
  "test/unit/test_bleu.py::test_degenerate_statistics[statistics2-0.0-0.0]",
  "test/unit/test_bleu.py::test_degenerate_statistics[statistics3-0.0-0.0]",
  "test/unit/test_bleu.py::test_degenerate_statistics[statistics4-0.1-0.0]",
  "test/unit/test_bleu.py::test_degenerate_statistics[statistics5-0.01-0.0]",
  "test/unit/test_bleu.py::test_degenerate_uneven[hypotheses0-references0]",
  "test/unit/test_bleu.py::test_degenerate_uneven[hypotheses1-references1]",
  "test/unit/test_chrf.py::test_chrf[hypotheses0-references0-1.0]",
  "test/unit/test_chrf.py::test_chrf[hypotheses1-references1-0.0]",
  "test/unit/test_chrf.py::test_chrf[hypotheses2-references2-1.0]",
  "test/unit/test_chrf.py::test_chrf[hypotheses3-references3-0.0]",
  "test/unit/test_chrf.py::test_chrf[hypotheses4-references4-0.0]",
  "test/unit/test_chrf.py::test_chrf[hypotheses5-references5-1.0]",
  "test/unit/test_chrf.py::test_chrf[hypotheses6-references6-1.0]",
  "test/unit/test_chrf.py::test_chrf[hypotheses7-references7-0.0]",
  "test/unit/test_chrf.py::test_chrf[hypotheses8-references8-0.5]",
  "test/unit/test_chrf.py::test_chrf[hypotheses9-references9-0.0]",
  "test/unit/test_chrf.py::test_chrf[hypotheses10-references10-0.25]",
  "test/unit/test_chrf.py::test_chrf[hypotheses11-references11-0.6413026983156146]",
  "test/unit/test_chrf.py::test_chrf[hypotheses12-references12-0.6336173030321477]",
  "test/unit/test_chrf.py::test_chrf_keep_whitespace[hypotheses0-references0-0.673481606297724]",
  "test/unit/test_chrf.py::test_chrf_keep_whitespace[hypotheses1-references1-0.652414427449]",
  "test/unit/test_config.py::test_base_freeze",
  "test/unit/test_config.py::test_freeze",
  "test/unit/test_config.py::test_config_repr",
  "test/unit/test_config.py::test_eq",
  "test/unit/test_config.py::test_no_self_attribute",
  "test/unit/test_config.py::test_serialization",
  "test/unit/test_config.py::test_copy",
  "test/unit/test_config.py::test_missing_attributes_filled_with_default",
  "test/unit/test_coverage.py::test_activation_coverage[tanh]",
  "test/unit/test_coverage.py::test_activation_coverage[sigmoid]",
  "test/unit/test_coverage.py::test_activation_coverage[relu]",
  "test/unit/test_coverage.py::test_activation_coverage[softrelu]",
  "test/unit/test_coverage.py::test_gru_coverage",
  "test/unit/test_data_io.py::test_define_buckets[50-10-expected_buckets0]",
  "test/unit/test_data_io.py::test_define_buckets[50-20-expected_buckets1]",
  "test/unit/test_data_io.py::test_define_buckets[50-50-expected_buckets2]",
  "test/unit/test_data_io.py::test_define_buckets[5-10-expected_buckets3]",
  "test/unit/test_data_io.py::test_define_buckets[11-5-expected_buckets4]",
  "test/unit/test_data_io.py::test_define_buckets[19-10-expected_buckets5]",
  "test/unit/test_data_io.py::test_define_parallel_buckets[50-50-10-1.0-expected_buckets0]",
  "test/unit/test_data_io.py::test_define_parallel_buckets[50-50-10-0.5-expected_buckets1]",
  "test/unit/test_data_io.py::test_define_parallel_buckets[10-10-10-0.1-expected_buckets2]",
  "test/unit/test_data_io.py::test_define_parallel_buckets[10-5-10-0.01-expected_buckets3]",
  "test/unit/test_data_io.py::test_define_parallel_buckets[50-50-10-2.0-expected_buckets4]",
  "test/unit/test_data_io.py::test_define_parallel_buckets[5-10-10-10.0-expected_buckets5]",
  "test/unit/test_data_io.py::test_define_parallel_buckets[5-10-10-11.0-expected_buckets6]",
  "test/unit/test_data_io.py::test_define_parallel_buckets[50-50-50-0.5-expected_buckets7]",
  "test/unit/test_data_io.py::test_define_parallel_buckets[50-50-50-1.5-expected_buckets8]",
  "test/unit/test_data_io.py::test_define_parallel_buckets[75-75-50-1.5-expected_buckets9]",
  "test/unit/test_data_io.py::test_get_bucket[buckets0-50-50]",
  "test/unit/test_data_io.py::test_get_bucket[buckets1-11-20]",
  "test/unit/test_data_io.py::test_get_bucket[buckets2-9-10]",
  "test/unit/test_data_io.py::test_get_bucket[buckets3-51-None]",
  "test/unit/test_data_io.py::test_get_bucket[buckets4-1-10]",
  "test/unit/test_data_io.py::test_get_bucket[buckets5-0-10]",
  "test/unit/test_data_io.py::test_get_bucket[buckets6-50-None]",
  "test/unit/test_data_io.py::test_tokens2ids[tokens0-vocab0-expected_ids0]",
  "test/unit/test_data_io.py::test_tokens2ids[tokens1-vocab1-expected_ids1]",
  "test/unit/test_data_io.py::test_strids2ids[tokens0-expected_ids0]",
  "test/unit/test_data_io.py::test_strids2ids[tokens1-expected_ids1]",
  "test/unit/test_data_io.py::test_ids2strids[ids0-1 2 3 0]",
  "test/unit/test_data_io.py::test_ids2strids[ids1-]",
  "test/unit/test_data_io.py::test_sequence_reader[sequences0-False-False]",
  "test/unit/test_data_io.py::test_sequence_reader[sequences1-True-False]",
  "test/unit/test_data_io.py::test_sequence_reader[sequences2-True-True]",
  "test/unit/test_data_io.py::test_sample_based_define_bucket_batch_sizes",
  "test/unit/test_data_io.py::test_word_based_define_bucket_batch_sizes",
  "test/unit/test_data_io.py::test_parallel_data_set",
  "test/unit/test_data_io.py::test_parallel_data_set_fill_up",
  "test/unit/test_data_io.py::test_get_permutations",
  "test/unit/test_data_io.py::test_parallel_data_set_permute",
  "test/unit/test_data_io.py::test_get_batch_indices",
  "test/unit/test_data_io.py::test_get_default_bucket_key[buckets0-expected_default_bucket_key0]",
  "test/unit/test_data_io.py::test_get_default_bucket_key[buckets1-expected_default_bucket_key1]",
  "test/unit/test_data_io.py::test_get_parallel_bucket[buckets0-50-50-4-expected_bucket0]",
  "test/unit/test_data_io.py::test_get_parallel_bucket[buckets1-50-10-4-expected_bucket1]",
  "test/unit/test_data_io.py::test_get_parallel_bucket[buckets2-20-10-1-expected_bucket2]",
  "test/unit/test_data_io.py::test_get_parallel_bucket[buckets3-20-10-None-None]",
  "test/unit/test_data_io.py::test_get_parallel_bucket[buckets4-20-10-None-None]",
  "test/unit/test_data_io.py::test_get_parallel_bucket[buckets5-11-10-None-None]",
  "test/unit/test_data_io.py::test_get_parallel_bucket[buckets6-11-10-0-expected_bucket6]",
  "test/unit/test_data_io.py::test_calculate_length_statistics[sources0-target0-3-1.0-0.0]",
  "test/unit/test_data_io.py::test_calculate_length_statistics[sources1-target1-3-1.5-0.0]",
  "test/unit/test_data_io.py::test_calculate_length_statistics[sources2-target2-2-0.75-0.25]",
  "test/unit/test_data_io.py::test_non_parallel_calculate_length_statistics[sources0-target0]",
  "test/unit/test_data_io.py::test_get_training_data_iters",
  "test/unit/test_data_io.py::test_parallel_sample_iter",
  "test/unit/test_data_io.py::test_sharded_parallel_sample_iter",
  "test/unit/test_data_io.py::test_sharded_parallel_sample_iter_num_batches",
  "test/unit/test_data_io.py::test_sharded_and_parallel_iter_same_num_batches",
  "test/unit/test_decoder.py::test_get_decoder",
  "test/unit/test_decoder.py::test_step[gru-True]",
  "test/unit/test_decoder.py::test_step[lstm-False]",
  "test/unit/test_encoder.py::test_get_recurrent_encoder_no_conv_config",
  "test/unit/test_encoder.py::test_get_recurrent_encoder",
  "test/unit/test_encoder.py::test_get_transformer_encoder",
  "test/unit/test_encoder.py::test_get_convolutional_encoder",
  "test/unit/test_encoder.py::test_convolutional_embedding_encoder[config0-out_data_shape0-out_data_length0-3]",
  "test/unit/test_encoder.py::test_convolutional_embedding_encoder[config1-out_data_shape1-out_data_length1-4]",
  "test/unit/test_encoder.py::test_sincos_positional_embeddings",
  "test/unit/test_inference.py::test_concat_translations",
  "test/unit/test_inference.py::test_length_penalty_default",
  "test/unit/test_inference.py::test_length_penalty",
  "test/unit/test_inference.py::test_length_penalty_int_input",
  "test/unit/test_inference.py::test_translator_input[1-a test-None-4]",
  "test/unit/test_inference.py::test_translator_input[1-a test-None-2]",
  "test/unit/test_inference.py::test_translator_input[1-a test-None-1]",
  "test/unit/test_inference.py::test_translator_input[0--None-1]",
  "test/unit/test_inference.py::test_translator_input[1-a test-factors4-4]",
  "test/unit/test_inference.py::test_translator_input[1-a test-factors5-1]",
  "test/unit/test_inference.py::test_get_max_input_output_length[100-100-100-None-0.9-0.2-89-100]",
  "test/unit/test_inference.py::test_get_max_input_output_length[100-100-100-None-1.1-0.2-75-100]",
  "test/unit/test_inference.py::test_get_max_input_output_length[None-100-100-None-0.9-0.1-98-100]",
  "test/unit/test_inference.py::test_get_max_input_output_length[80-None-100-None-1.1-0.4-80-122]",
  "test/unit/test_inference.py::test_get_max_input_output_length[None-None-100-None-1.0-0.1-100-113]",
  "test/unit/test_inference.py::test_get_max_input_output_length[100-100-100-50-1.1-0.2-50-67]",
  "test/unit/test_inference.py::test_make_input_from_factored_string[this is a test-1-|-expected_tokens0-None]",
  "test/unit/test_inference.py::test_make_input_from_factored_string[this|X is| a|X test|-1-|-expected_tokens1-None]",
  "test/unit/test_inference.py::test_make_input_from_factored_string[space   space-1-|-expected_tokens2-None]",
  "test/unit/test_inference.py::test_make_input_from_factored_string[-1-|-expected_tokens3-None]",
  "test/unit/test_inference.py::test_make_input_from_factored_string[-2-|-expected_tokens4-expected_factors4]",
  "test/unit/test_inference.py::test_make_input_from_factored_string[a|l b|l C|u-2-|-expected_tokens5-expected_factors5]",
  "test/unit/test_inference.py::test_make_input_from_factored_string[a-X-Y b-Y-X-3---expected_tokens6-expected_factors6]",
  "test/unit/test_inference.py::test_make_input_from_factored_string[a-X-Y -3---expected_tokens7-expected_factors7]",
  "test/unit/test_inference.py::test_factor_parsing[this is a test-2-|]",
  "test/unit/test_inference.py::test_factor_parsing[this|X is a test-2-|]",
  "test/unit/test_inference.py::test_factor_parsing[this|X is|X a|X test-2-|]",
  "test/unit/test_inference.py::test_factor_parsing[this| is|X a|X test|-2-|]",
  "test/unit/test_inference.py::test_factor_parsing[this|X is|X a|X test|-2-|]",
  "test/unit/test_inference.py::test_factor_parsing[w1||w2||f22-2-|]",
  "test/unit/test_inference.py::test_factor_parsing[this-2-|]",
  "test/unit/test_inference.py::test_factor_parsing[this|-2-|]",
  "test/unit/test_inference.py::test_factor_parsing[this||-3-|]",
  "test/unit/test_inference.py::test_factor_parsing[this|| another-2-|]",
  "test/unit/test_inference.py::test_factor_parsing[this|||-2-|]",
  "test/unit/test_inference.py::test_factor_parsing[|this-2-|]",
  "test/unit/test_inference.py::test_factor_parsing[|this|that-3-|]",
  "test/unit/test_inference.py::test_factor_parsing[|this|that|-4-|]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\t]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\t \\t]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\t\\t]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\n]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\r]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\r\\n]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[ ]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\n\\n]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[  ]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[ \\t]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\x0c]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\x0b]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\xa0]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\u1680]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\u2000]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[None]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\u200a]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\u205f]",
  "test/unit/test_inference.py::test_make_input_whitespace_delimiter[\\u3000]",
  "test/unit/test_inference.py::test_make_input_from_valid_json_string[this is a test without factors-None]",
  "test/unit/test_inference.py::test_make_input_from_valid_json_string[-None]",
  "test/unit/test_inference.py::test_make_input_from_valid_json_string[test-factors2]",
  "test/unit/test_inference.py::test_make_input_from_valid_json_string[a b c-factors3]",
  "test/unit/test_inference.py::test_make_input_from_valid_json_string[a-factors4]",
  "test/unit/test_inference.py::test_failed_make_input_from_valid_json_string[a-blub-None-]",
  "test/unit/test_inference.py::test_make_input_from_multiple_strings[strings0]",
  "test/unit/test_inference.py::test_make_input_from_multiple_strings[strings1]",
  "test/unit/test_init_embedding.py::test_init_weight[embed0-vocab_in0-vocab_out0-expected_embed_init0]",
  "test/unit/test_layers.py::test_layer_normalization",
  "test/unit/test_layers.py::test_weight_normalization",
  "test/unit/test_lexicon.py::test_topk_lexicon",
  "test/unit/test_loss.py::test_cross_entropy_loss",
  "test/unit/test_loss.py::test_smoothed_cross_entropy_loss",
  "test/unit/test_loss.py::test_cross_entropy_metric[preds0-labels0-valid-0.0-0.223143538814]",
  "test/unit/test_loss.py::test_cross_entropy_metric[preds1-labels1-batch-0.0-0.111571769407]",
  "test/unit/test_loss.py::test_cross_entropy_internal",
  "test/unit/test_lr_scheduler.py::test_lr_scheduler",
  "test/unit/test_lr_scheduler.py::test_fixed_step_lr_scheduler",
  "test/unit/test_lr_scheduler.py::test_get_lr_scheduler[fixed-rate-inv-sqrt-t-1.0-LearningRateSchedulerInvSqrtT]",
  "test/unit/test_lr_scheduler.py::test_get_lr_scheduler[fixed-rate-inv-t-1.0-LearningRateSchedulerInvT]",
  "test/unit/test_lr_scheduler.py::test_get_lr_scheduler[plateau-reduce-0.5-LearningRateSchedulerPlateauReduce]",
  "test/unit/test_lr_scheduler.py::test_get_lr_scheduler_no_reduce",
  "test/unit/test_optimizers.py::test_optimizer[adam-optimizer_params0]",
  "test/unit/test_optimizers.py::test_optimizer[eve-optimizer_params1]",
  "test/unit/test_optimizers.py::test_optimizer[eve-optimizer_params2]",
  "test/unit/test_output_handler.py::test_stream_output_handler[handler0-translation_input0-translation_output0-0.0-ein Test\\n]",
  "test/unit/test_output_handler.py::test_stream_output_handler[handler1-translation_input1-translation_output1-0.0-\\n]",
  "test/unit/test_output_handler.py::test_stream_output_handler[handler2-translation_input2-translation_output2-0.0-ein Test\\t0-0 1-1\\n]",
  "test/unit/test_output_handler.py::test_stream_output_handler[handler3-translation_input3-translation_output3-0.0-ein Test !\\t0-1 1-0\\n]",
  "test/unit/test_output_handler.py::test_stream_output_handler[handler4-translation_input4-translation_output4-0.5-input=a test\\toutput=ein Test\\tinput_tokens=2\\toutput_tokens=2\\ttranslation_time=0.5000\\n]",
  "test/unit/test_output_handler.py::test_stream_output_handler[handler5-translation_input5-translation_output5-0.5-{\"id\": 0, \"normalized_scores\": [[0.05599012225866318, 4.394228935241699, 4.426244735717773], [0.17525514960289001, 0.2744167149066925, 0.2806641757488251]], \"number_steps\": 2, \"parent_ids\": [[0, 0, 0], [0, 0, 1]], \"predicted_ids\": [[258, 137, 31], [0, 0, 3]], \"predicted_tokens\": [[\"Was\", \"Wie\", \"Wo\"], [\"<pad>\", \"<pad>\", \"</s>\"]], \"scores\": [[0.05599012225866318, 4.394228935241699, 4.426244735717773], [2.2783169746398926, 3.5674173831939697, 3.648634195327759]]}\\n]",
  "test/unit/test_params.py::test_cleanup_param_files",
  "test/unit/test_rnn.py::test_ln_cell[cell0-expected_param_keys0]",
  "test/unit/test_rnn.py::test_ln_cell[cell1-expected_param_keys1]",
  "test/unit/test_rnn.py::test_ln_cell[cell2-expected_param_keys2]",
  "test/unit/test_rnn.py::test_ln_cell[cell3-expected_param_keys3]",
  "test/unit/test_rnn.py::test_get_stacked_rnn[config0-LSTMCell]",
  "test/unit/test_rnn.py::test_get_stacked_rnn[config1-RecurrentDropoutLSTMCell]",
  "test/unit/test_rnn.py::test_get_stacked_rnn[config2-LayerNormLSTMCell]",
  "test/unit/test_rnn.py::test_get_stacked_rnn[config3-LayerNormPerGateLSTMCell]",
  "test/unit/test_rnn.py::test_get_stacked_rnn[config4-GRUCell]",
  "test/unit/test_rnn.py::test_get_stacked_rnn[config5-LayerNormGRUCell]",
  "test/unit/test_rnn.py::test_get_stacked_rnn[config6-LayerNormPerGateGRUCell]",
  "test/unit/test_rnn.py::test_get_stacked_rnn[config7-LSTMCell]",
  "test/unit/test_rnn.py::test_cell_parallel_input",
  "test/unit/test_rnn.py::test_residual_cell_parallel_input",
  "test/unit/test_rnn.py::test_sequential_rnn_cell_parallel_input",
  "test/unit/test_translate.py::test_translate_by_file",
  "test/unit/test_translate.py::test_translate_by_stdin_chunk2",
  "test/unit/test_utils.py::test_chunks[some_list0-expected0]",
  "test/unit/test_utils.py::test_chunks[some_list1-expected1]",
  "test/unit/test_utils.py::test_chunks[some_list2-expected2]",
  "test/unit/test_utils.py::test_chunks[some_list3-expected3]",
  "test/unit/test_utils.py::test_get_alignments",
  "test/unit/test_utils.py::test_expand_requested_device_ids[requested_device_ids0-6-expected0]",
  "test/unit/test_utils.py::test_expand_requested_device_ids[requested_device_ids1-6-expected1]",
  "test/unit/test_utils.py::test_expand_requested_device_ids[requested_device_ids2-1-expected2]",
  "test/unit/test_utils.py::test_expand_requested_device_ids[requested_device_ids3-1-expected3]",
  "test/unit/test_utils.py::test_aquire_gpus[requested_device_ids0-6-expected0]",
  "test/unit/test_utils.py::test_aquire_gpus[requested_device_ids1-6-expected1]",
  "test/unit/test_utils.py::test_aquire_gpus[requested_device_ids2-1-expected2]",
  "test/unit/test_utils.py::test_aquire_gpus[requested_device_ids3-1-expected3]",
  "test/unit/test_utils.py::test_expand_requested_device_ids_exception[requested_device_ids0-5]",
  "test/unit/test_utils.py::test_expand_requested_device_ids_exception[requested_device_ids1-5]",
  "test/unit/test_utils.py::test_expand_requested_device_ids_exception[requested_device_ids2-1]",
  "test/unit/test_utils.py::test_expand_requested_device_ids_exception[requested_device_ids3-1]",
  "test/unit/test_utils.py::test_expand_requested_device_ids_exception[requested_device_ids4-1]",
  "test/unit/test_utils.py::test_aquire_gpus_exception[requested_device_ids0-5]",
  "test/unit/test_utils.py::test_aquire_gpus_exception[requested_device_ids1-5]",
  "test/unit/test_utils.py::test_aquire_gpus_exception[requested_device_ids2-1]",
  "test/unit/test_utils.py::test_aquire_gpus_exception[requested_device_ids3-1]",
  "test/unit/test_utils.py::test_aquire_gpus_exception[requested_device_ids4-1]",
  "test/unit/test_utils.py::test_aquire_gpus_1_locked[requested_device_ids0-7-expected0]",
  "test/unit/test_utils.py::test_aquire_gpus_1_locked[requested_device_ids1-7-expected1]",
  "test/unit/test_utils.py::test_acquire_gpus_exception_propagation",
  "test/unit/test_utils.py::test_gpu_file_lock_cleanup",
  "test/unit/test_utils.py::test_gpu_file_lock_exception_propagation",
  "test/unit/test_utils.py::test_gpu_file_lock_locking",
  "test/unit/test_utils.py::test_gpu_file_lock_permission_exception",
  "test/unit/test_utils.py::test_check_condition_true",
  "test/unit/test_utils.py::test_check_condition_false",
  "test/unit/test_utils.py::test_parse_version[1.0.3-expected_version0]",
  "test/unit/test_utils.py::test_parse_version[1.0.2.3-expected_version1]",
  "test/unit/test_utils.py::test_check_version_disregards_minor",
  "test/unit/test_utils.py::test_check_version_checks_major",
  "test/unit/test_utils.py::test_version_matches_changelog",
  "test/unit/test_utils.py::test_online_mean_and_variance[samples0-1.5-0.25]",
  "test/unit/test_utils.py::test_online_mean_and_variance[samples1-130.57142857142858-132975.38775510204]",
  "test/unit/test_utils.py::test_online_mean_and_variance_nan[samples0-0.0]",
  "test/unit/test_utils.py::test_online_mean_and_variance_nan[samples1-5.0]",
  "test/unit/test_utils.py::test_get_tokens[this is a line  \\n-expected_tokens0]",
  "test/unit/test_utils.py::test_get_tokens[ a  \\tb \\r \\n-expected_tokens1]",
  "test/unit/test_utils.py::test_average_arrays",
  "test/unit/test_utils.py::test_save_and_load_params",
  "test/unit/test_utils.py::test_print_value",
  "test/unit/test_utils.py::test_metric_value_is_better[0-0-perplexity-False]",
  "test/unit/test_utils.py::test_metric_value_is_better[1.0-1.0-perplexity-False]",
  "test/unit/test_utils.py::test_metric_value_is_better[1.0-0.9-perplexity-False]",
  "test/unit/test_utils.py::test_metric_value_is_better[0.99-1.0-perplexity-True]",
  "test/unit/test_utils.py::test_metric_value_is_better[99999999.0-inf-perplexity-True]",
  "test/unit/test_utils.py::test_metric_value_is_better[0-0-bleu-False]",
  "test/unit/test_utils.py::test_metric_value_is_better[1.0-1.0-bleu-False]",
  "test/unit/test_utils.py::test_metric_value_is_better[1.0-0.9-bleu-True]",
  "test/unit/test_utils.py::test_metric_value_is_better[0.99-1.0-bleu-False]",
  "test/unit/test_utils.py::test_metric_value_is_better[99999999.0-inf-bleu-False]",
  "test/unit/test_vocab.py::test_build_vocab[data0-3-1-expected0]",
  "test/unit/test_vocab.py::test_build_vocab[data1-3-2-expected1]",
  "test/unit/test_vocab.py::test_build_vocab[data2-2-2-expected2]",
  "test/unit/test_vocab.py::test_build_vocab[data3-3-1-expected3]",
  "test/unit/test_vocab.py::test_build_vocab[data4-3-2-expected4]",
  "test/unit/test_vocab.py::test_build_vocab[data5-3-3-expected5]",
  "test/unit/test_vocab.py::test_build_vocab[data6-2-1-expected6]",
  "test/unit/test_vocab.py::test_constants_in_vocab[data0-3-1-constants0]",
  "test/unit/test_vocab.py::test_constants_in_vocab[data1-3-2-constants1]",
  "test/unit/test_vocab.py::test_constants_in_vocab[data2-2-2-constants2]",
  "test/unit/test_vocab.py::test_constants_in_vocab[data3-3-1-constants3]",
  "test/unit/test_vocab.py::test_constants_in_vocab[data4-3-2-constants4]",
  "test/unit/test_vocab.py::test_constants_in_vocab[data5-3-3-constants5]",
  "test/unit/test_vocab.py::test_constants_in_vocab[data6-2-1-constants6]",
  "test/unit/test_vocab.py::test_get_ordered_tokens_from_vocab[vocab0-expected_output0]",
  "test/unit/test_vocab.py::test_get_ordered_tokens_from_vocab[vocab1-expected_output1]",
  "test/integration/test_seq_copy_int.py::test_seq_copy[--encoder rnn --num-layers 1 --rnn-cell-type lstm --rnn-num-hidden 16 --num-embed 8 --rnn-attention-type mlp --rnn-attention-num-hidden 16 --batch-size 8 --loss cross-entropy --optimized-metric perplexity --max-updates 10 --checkpoint-frequency 10 --optimizer adam --initial-learning-rate 0.01---beam-size 2-True-False-False]",
  "test/integration/test_seq_copy_int.py::test_seq_copy[--encoder rnn --num-layers 4:2 --rnn-cell-type lstm --rnn-num-hidden 16 --rnn-residual-connections --num-embed 16 --rnn-attention-type coverage --rnn-attention-num-hidden 16 --weight-tying --rnn-attention-use-prev-word --rnn-context-gating --layer-normalization --batch-size 8 --loss cross-entropy --label-smoothing 0.1 --loss-normalization-type batch --optimized-metric perplexity --max-updates 10 --checkpoint-frequency 10 --optimizer adam --initial-learning-rate 0.01 --rnn-dropout-inputs 0.5:0.1 --rnn-dropout-states 0.5:0.1 --embed-dropout 0.1 --rnn-decoder-hidden-dropout 0.01 --rnn-decoder-state-init avg --rnn-encoder-reverse-input --rnn-dropout-recurrent 0.1:0.0 --rnn-h2h-init orthogonal_stacked --learning-rate-decay-param-reset --weight-normalization --source-factors-num-embed 5---beam-size 2-False-True-True]",
  "test/integration/test_seq_copy_int.py::test_seq_copy[--encoder rnn-with-conv-embed --conv-embed-max-filter-width 3 --conv-embed-num-filters 4:4:8 --conv-embed-pool-stride 2 --conv-embed-num-highway-layers 1 --num-layers 1 --rnn-cell-type lstm --rnn-num-hidden 16 --num-embed 8 --rnn-attention-num-hidden 16 --batch-size 8 --loss cross-entropy --optimized-metric perplexity --max-updates 10 --checkpoint-frequency 10 --optimizer adam --initial-learning-rate 0.01---beam-size 2-False-False-False]",
  "test/integration/test_seq_copy_int.py::test_seq_copy[--encoder transformer --num-layers 2:1 --rnn-cell-type gru --rnn-num-hidden 16 --num-embed 8:16 --transformer-attention-heads 2 --transformer-model-size 8 --transformer-feed-forward-num-hidden 32 --transformer-activation-type gelu --rnn-attention-type mhdot --rnn-attention-mhdot-heads 4 --rnn-attention-num-hidden 16 --batch-size 8  --max-updates 10 --checkpoint-frequency 10 --optimizer adam --initial-learning-rate 0.01 --weight-init-xavier-factor-type avg --weight-init-scale 3.0 --embed-weight-init normal---beam-size 2-False-True-False]",
  "test/integration/test_seq_copy_int.py::test_seq_copy[--encoder rnn --decoder transformer --num-layers 2:2 --rnn-cell-type lstm --rnn-num-hidden 16 --num-embed 16 --transformer-attention-heads 2 --transformer-model-size 16 --transformer-feed-forward-num-hidden 32 --transformer-activation-type swish1 --batch-size 8 --max-updates 10 --checkpoint-frequency 10 --optimizer adam --initial-learning-rate 0.01---beam-size 3-False-True-False]",
  "test/integration/test_seq_copy_int.py::test_seq_copy[--encoder transformer --decoder transformer --num-layers 3 --transformer-attention-heads 2 --transformer-model-size 16 --num-embed 16 --transformer-feed-forward-num-hidden 32 --transformer-dropout-prepost 0.1 --transformer-preprocess n --transformer-postprocess dr --weight-tying --weight-tying-type src_trg_softmax --weight-init-scale=3.0 --weight-init-xavier-factor-type=avg --embed-weight-init=normal --batch-size 8 --max-updates 10 --checkpoint-frequency 10 --optimizer adam --initial-learning-rate 0.01---beam-size 2-True-False-False]",
  "test/integration/test_seq_copy_int.py::test_seq_copy[--encoder transformer --decoder transformer --num-layers 3 --transformer-attention-heads 2 --transformer-model-size 16 --num-embed 16 --transformer-feed-forward-num-hidden 32 --transformer-dropout-prepost 0.1 --transformer-preprocess n --transformer-postprocess dr --weight-tying --weight-tying-type src_trg_softmax --batch-size 8 --max-updates 10 --checkpoint-frequency 10 --optimizer adam --initial-learning-rate 0.01 --source-factors-num-embed 4---beam-size 2-True-False-True]",
  "test/integration/test_seq_copy_int.py::test_seq_copy[--encoder cnn --decoder cnn  --batch-size 16 --num-layers 3 --max-updates 10 --checkpoint-frequency 10 --cnn-num-hidden 32 --cnn-positional-embedding-type fixed --optimizer adam --initial-learning-rate 0.001---beam-size 2-True-False-False]"
]