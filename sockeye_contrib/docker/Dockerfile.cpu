FROM ubuntu:20.04

# Minimal Python install first to avoid conflicts later
RUN apt-get update && apt-get install -y \
    python-dev \
    python3-dev \
    python3-venv \
    wget
RUN wget -nv https://bootstrap.pypa.io/get-pip.py && \
    python3 get-pip.py

#
# Install MXNet
#

# MXNet dependencies
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y \
    apt-transport-https \
    awscli \
    build-essential \
    ca-certificates \
    ccache \
    cmake \
    curl \
    gcc-8 \
    g++-8 \
    git \
    google-perftools \
    intel-mkl \
    libatlas-base-dev \
    libcurl4-openssl-dev \
    libjemalloc-dev \
    libhdf5-dev \
    liblapack-dev \
    libopenblas-dev \
    libopencv-dev \
    libssl-dev \
    libtinfo-dev \
    libturbojpeg \
    libzmq3-dev \
    zlib1g-dev \
    libedit-dev \
    libxml2-dev \
    libprotobuf-dev \
    protobuf-compiler \
    ninja-build \
    software-properties-common \
    sudo \
    unzip \
    vim-nox \
    virtualenv
RUN ln -s /usr/include/mkl/* /usr/include/

# Clone MXNet
ENV MXNET_COMMIT=e8a0a93b500caa909874d341138715d21add0130
RUN cd /opt && \
    git clone https://github.com/apache/incubator-mxnet.git mxnet && \
    cd mxnet && \
    git checkout ${MXNET_COMMIT} && \
    git submodule init && \
    git submodule update --recursive && \
    rm -rf 3rdparty/openmp

# Build MXNet with MKL and intgemm
RUN cd /opt/mxnet && \
    rm -rf build && \
    mkdir -p build && \
    cd build && \
    cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DUSE_BLAS=MKL \
        -DUSE_CUDA=OFF \
        -DUSE_INTGEMM=ON \
        -DUSE_MKL_IF_AVAILABLE=ON \
        -DUSE_MKLDNN=ON \
        -G Ninja \
        -DCMAKE_CXX_COMPILER=g++-8 \
        -DCMAKE_C_COMPILER=gcc-8 \
        .. && \
    ninja -j$(nproc)

# Install MXNet Python
RUN cd /opt/mxnet/python && pip3 install -e .

#
# Install Sockeye
#

# Sockeye Python dependencies
ARG REQS
RUN pip install --no-cache-dir ${REQS}

# Sockeye version
ARG SOCKEYE_COMMIT

# Install Sockeye
COPY . /opt/sockeye
RUN cd /opt/sockeye && \
    pip install --no-cache-dir --no-deps --editable .
